name: ALL Tn dev Deployment

on:
  push:
    branches:
      - all-0.6-hotfix

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: all-tn-dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ secrets.AWS_REGION }}

      - name: Clean up node_modules and package-lock.json
        run: |
          rm -rf node_modules
          rm -f package-lock.json

      - name: Install Dependencies
        run: npm install --legacy-peer-deps
      
      - name: Build Production
        run: |
          REACT_APP_ASR_API_KEY=${{ secrets.REACT_APP_ASR_API_KEY }} \
          REACT_APP_MODE=${{ vars.REACT_APP_MODE }} \
          REACT_APP_authToken=${{ vars.REACT_APP_AUTHTOKEN }} \
          REACT_APP_PID=${{ vars.REACT_APP_PID }} \
          REACT_APP_UID=${{ vars.REACT_APP_UID }} \
          REACT_APP_ID=${{ vars.REACT_APP_ID }} \
          REACT_APP_VER=${{ vars.REACT_APP_VER }} \
          REACT_APP_TIMEDIFF=${{ vars.REACT_APP_TIMEDIFF }} \
          REACT_APP_HOST=${{ vars.REACT_APP_HOST }} \
          REACT_APP_ENDPOINT=${{ vars.REACT_APP_ENDPOINT }} \
          REACT_APP_APISLUG=${{ vars.REACT_APP_APISLUG }} \
          REACT_APP_CHANNEL=${{ vars.REACT_APP_CHANNEL }} \
          REACT_APP_ENV=${{ vars.REACT_APP_ENV }} \
          REACT_APP_BATCHSIZE=${{ vars.REACT_APP_BATCHSIZE }} \
          REACT_APP_CONTENT_SIZE=${{ vars.REACT_APP_CONTENT_SIZE }} \
          REACT_APP_LANGUAGE=${{ vars.REACT_APP_LANGUAGE }} \
          REACT_APP_TELEMETRY_MODE=${{ vars.REACT_APP_TELEMETRY_MODE }} \
          REACT_APP_LEARNER_AI_APP_HOST=${{ vars.REACT_APP_LEARNER_AI_APP_HOST }} \
          REACT_APP_CAPTURE_AUDIO=${{ vars.REACT_APP_CAPTURE_AUDIO }} \
          REACT_APP_AWS_S3_BUCKET_NAME=${{ vars.REACT_APP_AWS_S3_BUCKET_NAME }} \
          REACT_APP_AWS_S3_BUCKET_URL=${{ vars.REACT_APP_AWS_S3_BUCKET_URL }} \
          REACT_APP_AWS_S3_REGION=${{ vars.REACT_APP_AWS_S3_REGION }} \
          REACT_APP_AWS_ACCESS_KEY_ID=${{ secrets.REACT_APP_AWS_ACCESS_KEY_ID }} \
          REACT_APP_AWS_SECRET_ACCESS_KEY=${{ secrets.REACT_APP_AWS_SECRET_ACCESS_KEY }} \
          REACT_APP_AWS_S3_BUCKET_CONTENT_URL=${{ vars.REACT_APP_AWS_S3_BUCKET_CONTENT_URL }} \
          REACT_APP_MIN_DECIBELS=${{ vars.REACT_APP_MIN_DECIBELS }} \
          REACT_APP_IS_AUDIOPREPROCESSING=${{ vars.REACT_APP_IS_AUDIOPREPROCESSING }} \
          npm run build
      - name: Deploy to S3 Bucket
        run: |
          aws s3 sync ./build s3://all-tn-app-dev/assets/sb-all/
      # - name: Debug Environment Variables
      #   run: |
      #     echo "REACT_APP_AWS_S3_BUCKET_NAME: $REACT_APP_AWS_S3_BUCKET_NAME"
      #     echo "AWS_REGION: $AWS_REGION"
      #     echo "secrate": ${{secrets.REACT_APP_AWS_S3_BUCKET_NAME}}
      #  ### Invalidate Cloudfront
      # - name: Cloudfront Invalidation
      #   uses: chetan/invalidate-cloudfront-action@master
      #   env:
      #     DISTRIBUTION: ${{ secrets.AWS_DISTRIBUTION }}
      #     PATHS: '/*'
      #     AWS_REGION: ${{ secrets.AWS_REGION }}
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
